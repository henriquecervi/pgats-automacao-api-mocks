name: üìä Deploy Test Reports to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Permite que este workflow escreva no reposit√≥rio
permissions:
  contents: read
  pages: write
  id-token: write

# Garante que apenas um deploy por vez
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Gerar relat√≥rios de teste
  test-reports:
    name: üß™ Generate Test Reports
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üß™ Run tests and generate reports
      run: |
        npm run test:report
        echo "‚úÖ Test reports generated!"
        
    - name: üìä Create pages structure
      run: |
        mkdir -p public
        cp -r test-results/* public/
        
        # Criar arquivo de timestamp
        echo "$(date)" > public/last-updated.txt
        
        # Criar informa√ß√µes do build
        echo "üìÖ Report generated: $(date)" > public/build-info.txt
        echo "üîñ Git commit: ${{ github.sha }}" >> public/build-info.txt
        echo "üåø Git branch: ${{ github.ref_name }}" >> public/build-info.txt
        echo "üë§ Triggered by: ${{ github.actor }}" >> public/build-info.txt
        
    - name: üìã Generate index page
      run: |
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="pt-BR">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>üè¶ Banco API - Test Reports</title>
            <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }
                
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                }
                
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 20px;
                }
                
                .header {
                    text-align: center;
                    color: white;
                    margin-bottom: 40px;
                }
                
                .header h1 {
                    font-size: 3rem;
                    margin-bottom: 10px;
                    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                }
                
                .header p {
                    font-size: 1.2rem;
                    opacity: 0.9;
                }
                
                .cards {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 20px;
                    margin-bottom: 40px;
                }
                
                .card {
                    background: white;
                    border-radius: 15px;
                    padding: 30px;
                    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                    transition: transform 0.3s ease, box-shadow 0.3s ease;
                    text-align: center;
                }
                
                .card:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
                }
                
                .card-icon {
                    font-size: 3rem;
                    margin-bottom: 15px;
                }
                
                .card h2 {
                    color: #4A5568;
                    margin-bottom: 15px;
                    font-size: 1.5rem;
                }
                
                .card p {
                    color: #718096;
                    margin-bottom: 20px;
                }
                
                .btn {
                    display: inline-block;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 12px 30px;
                    text-decoration: none;
                    border-radius: 25px;
                    font-weight: bold;
                    transition: transform 0.3s ease, box-shadow 0.3s ease;
                }
                
                .btn:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                }
                
                .stats {
                    background: white;
                    border-radius: 15px;
                    padding: 30px;
                    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                    text-align: center;
                }
                
                .stats-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                    gap: 20px;
                    margin-top: 20px;
                }
                
                .stat-item {
                    padding: 15px;
                    border-radius: 10px;
                    background: #f7fafc;
                }
                
                .stat-number {
                    font-size: 2rem;
                    font-weight: bold;
                    color: #4A5568;
                }
                
                .stat-label {
                    color: #718096;
                    font-size: 0.9rem;
                }
                
                .footer {
                    text-align: center;
                    color: white;
                    opacity: 0.8;
                    margin-top: 40px;
                }
                
                .last-updated {
                    background: rgba(255,255,255,0.1);
                    border-radius: 10px;
                    padding: 15px;
                    margin: 20px 0;
                    color: white;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üè¶ Banco API</h1>
                    <p>Relat√≥rios de Testes Automatizados</p>
                </div>
                
                <div class="cards">
                    <div class="card">
                        <div class="card-icon">üìä</div>
                        <h2>Relat√≥rio Principal</h2>
                        <p>Relat√≥rio completo com todos os testes executados, incluindo controllers, services, integra√ß√£o e sistema.</p>
                        <a href="test-report.html" class="btn">Ver Relat√≥rio</a>
                    </div>
                    
                    <div class="card">
                        <div class="card-icon">üìà</div>
                        <h2>Dados JSON</h2>
                        <p>Dados brutos dos testes em formato JSON para integra√ß√£o com outras ferramentas.</p>
                        <a href="test-report.json" class="btn">Ver JSON</a>
                    </div>
                    
                    <div class="card">
                        <div class="card-icon">üîó</div>
                        <h2>API Documentation</h2>
                        <p>Documenta√ß√£o interativa da API com Swagger UI para explorar todos os endpoints.</p>
                        <a href="#" class="btn" onclick="alert('Execute a API localmente e acesse: http://localhost:3000/api-docs')">Ver Docs</a>
                    </div>
                </div>
                
                <div class="stats">
                    <h2>üìä Estat√≠sticas dos Testes</h2>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-number">65</div>
                            <div class="stat-label">Testes Passando</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">4</div>
                            <div class="stat-label">Categorias</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">38</div>
                            <div class="stat-label">Testes com Sinon</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">100%</div>
                            <div class="stat-label">Taxa de Sucesso</div>
                        </div>
                    </div>
                </div>
                
                <div class="last-updated">
                    <strong>üìÖ √öltima atualiza√ß√£o:</strong> <span id="lastUpdated">Carregando...</span><br>
                    <strong>üîñ Commit:</strong> ${{ github.sha }}<br>
                    <strong>üë§ Por:</strong> ${{ github.actor }}
                </div>
                
                <div class="footer">
                    <p>üöÄ Gerado automaticamente pelo GitHub Actions</p>
                    <p>üìä Powered by Mocha + Mochawesome</p>
                </div>
            </div>
            
            <script>
                // Carregar timestamp da √∫ltima atualiza√ß√£o
                fetch('last-updated.txt')
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('lastUpdated').textContent = data.trim();
                    })
                    .catch(() => {
                        document.getElementById('lastUpdated').textContent = 'N√£o dispon√≠vel';
                    });
            </script>
        </body>
        </html>
        EOF
        
    - name: üìÅ Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: public/

  # Job 2: Deploy para GitHub Pages
  deploy:
    name: üöÄ Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test-reports
    
    steps:
    - name: üåê Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: üì¢ Deployment summary
      run: |
        echo "üè¶ ===== GITHUB PAGES DEPLOYMENT ====="
        echo ""
        echo "‚úÖ Test reports deployed successfully!"
        echo "üåê URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üìä Relat√≥rio principal: ${{ steps.deployment.outputs.page_url }}test-report.html"
        echo "üìÖ Deploy time: $(date)"
        echo "üîñ Commit: ${{ github.sha }}"
        echo ""
        echo "üéâ Acesse os relat√≥rios online!"
