name: üìä Deploy Test Reports to GitHub Pages

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["üè¶ Bank API CI/CD Pipeline"]
    branches: [ main ]
    types: 
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: üì¶ Checkout Repository
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üì• Install Dependencies
      run: npm ci
      
    - name: üß™ Run Tests & Generate Reports
      run: |
        npm run test:report
        
    - name: üìä Generate Coverage Report (if exists)
      run: |
        if [ -f "package.json" ] && grep -q "nyc\|c8\|jest" package.json; then
          echo "Coverage tool detected, generating coverage..."
          npm run coverage 2>/dev/null || npm run test:coverage 2>/dev/null || echo "No coverage script found"
        fi
      continue-on-error: true
        
    - name: üìã Create Public Directory
      run: mkdir -p public
      
    - name: üìÑ Copy Test Reports
      run: |
        if [ -d "test-results" ]; then
          cp -r test-results/* public/ 2>/dev/null || true
        fi
        if [ -f "test-results/test-report.html" ]; then
          cp test-results/test-report.html public/
        fi
        if [ -f "test-results/test-report.json" ]; then
          cp test-results/test-report.json public/
        fi
        
    - name: üìä Copy Coverage Reports (if exists)
      run: |
        if [ -d "coverage" ]; then
          cp -r coverage public/coverage 2>/dev/null || true
        fi
        if [ -d "nyc_output" ]; then
          cp -r nyc_output public/nyc_output 2>/dev/null || true
        fi
      continue-on-error: true
        
    - name: üé® Generate Dashboard Index Page
      run: |
        # Get test stats from JSON report
        TOTAL_TESTS=0
        PASSED_TESTS=0
        FAILED_TESTS=0
        PENDING_TESTS=0
        TEST_DURATION="0s"
        
        if [ -f "public/test-report.json" ]; then
          TOTAL_TESTS=$(cat public/test-report.json | jq -r '.stats.tests // 0' 2>/dev/null || echo "0")
          PASSED_TESTS=$(cat public/test-report.json | jq -r '.stats.passes // 0' 2>/dev/null || echo "0")
          FAILED_TESTS=$(cat public/test-report.json | jq -r '.stats.failures // 0' 2>/dev/null || echo "0")
          PENDING_TESTS=$(cat public/test-report.json | jq -r '.stats.pending // 0' 2>/dev/null || echo "0")
          TEST_DURATION=$(cat public/test-report.json | jq -r '.stats.duration // 0' 2>/dev/null || echo "0")
          
          # Convert duration to human readable
          if [ "$TEST_DURATION" != "0" ] && [ "$TEST_DURATION" != "null" ]; then
            TEST_DURATION="${TEST_DURATION}ms"
          else
            TEST_DURATION="N/A"
          fi
        fi
        
        # Calculate success rate
        SUCCESS_RATE=0
        if [ "$TOTAL_TESTS" -gt 0 ]; then
          SUCCESS_RATE=$(echo "scale=1; $PASSED_TESTS * 100 / $TOTAL_TESTS" | bc 2>/dev/null || echo "0")
        fi
        
        # Generate main dashboard
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>üè¶ Bank API - Test Dashboard</title>
            <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
            <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }
                
                body {
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                    color: #333;
                }
                
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 20px;
                }
                
                .header {
                    text-align: center;
                    margin-bottom: 40px;
                    color: white;
                }
                
                .header h1 {
                    font-size: 3rem;
                    margin-bottom: 10px;
                    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                }
                
                .header p {
                    font-size: 1.2rem;
                    opacity: 0.9;
                }
                
                .stats-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                    gap: 20px;
                    margin-bottom: 40px;
                }
                
                .stat-card {
                    background: white;
                    border-radius: 15px;
                    padding: 30px;
                    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                    transition: transform 0.3s ease, box-shadow 0.3s ease;
                }
                
                .stat-card:hover {
                    transform: translateY(-10px);
                    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
                }
                
                .stat-card .icon {
                    font-size: 3rem;
                    margin-bottom: 15px;
                }
                
                .stat-card .number {
                    font-size: 2.5rem;
                    font-weight: bold;
                    margin-bottom: 10px;
                }
                
                .stat-card .label {
                    font-size: 1rem;
                    color: #666;
                    text-transform: uppercase;
                    letter-spacing: 1px;
                }
                
                .success { color: #10b981; }
                .danger { color: #ef4444; }
                .warning { color: #f59e0b; }
                .info { color: #3b82f6; }
                .purple { color: #8b5cf6; }
                
                .reports-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 20px;
                    margin-bottom: 40px;
                }
                
                .report-card {
                    background: white;
                    border-radius: 15px;
                    padding: 30px;
                    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                    transition: transform 0.3s ease;
                }
                
                .report-card:hover {
                    transform: translateY(-5px);
                }
                
                .report-card h3 {
                    font-size: 1.5rem;
                    margin-bottom: 15px;
                    color: #333;
                }
                
                .report-card p {
                    color: #666;
                    margin-bottom: 20px;
                    line-height: 1.6;
                }
                
                .btn {
                    display: inline-block;
                    padding: 12px 24px;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    text-decoration: none;
                    border-radius: 8px;
                    font-weight: 500;
                    transition: all 0.3s ease;
                    border: none;
                    cursor: pointer;
                }
                
                .btn:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                }
                
                .btn-secondary {
                    background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
                    margin-left: 10px;
                }
                
                .footer {
                    text-align: center;
                    color: white;
                    margin-top: 40px;
                    padding: 20px;
                    border-top: 1px solid rgba(255,255,255,0.1);
                }
                
                .build-info {
                    background: rgba(255,255,255,0.1);
                    border-radius: 10px;
                    padding: 20px;
                    margin-bottom: 30px;
                    color: white;
                }
                
                .badge {
                    display: inline-block;
                    padding: 4px 12px;
                    border-radius: 20px;
                    font-size: 0.8rem;
                    font-weight: 500;
                    margin-left: 10px;
                }
                
                .badge-success { background: #10b981; color: white; }
                .badge-danger { background: #ef4444; color: white; }
                
                @media (max-width: 768px) {
                    .header h1 { font-size: 2rem; }
                    .stats-grid { grid-template-columns: 1fr; }
                    .reports-grid { grid-template-columns: 1fr; }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <header class="header">
                    <h1>üè¶ Bank API Test Dashboard</h1>
                    <p>Comprehensive Testing & Quality Assurance Reports</p>
                </header>
                
                <div class="build-info">
                    <h3><i class="fas fa-info-circle"></i> Build Information</h3>
                    <p><strong>Last Update:</strong> <span id="buildDate"></span></p>
                    <p><strong>Repository:</strong> <a href="https://github.com/henriquecervi/pgats-automacao-api-mocks" style="color: #60a5fa;">henriquecervi/pgats-automacao-api-mocks</a></p>
                    <p><strong>Branch:</strong> main <span class="badge badge-success">Active</span></p>
                </div>
                
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="icon success"><i class="fas fa-check-circle"></i></div>
                        <div class="number success">EOF
        echo "$PASSED_TESTS" >> public/index.html
        cat >> public/index.html << 'EOF'
        </div>
                        <div class="label">Tests Passed</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="icon danger"><i class="fas fa-times-circle"></i></div>
                        <div class="number danger">EOF
        echo "$FAILED_TESTS" >> public/index.html
        cat >> public/index.html << 'EOF'
        </div>
                        <div class="label">Tests Failed</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="icon info"><i class="fas fa-list-ul"></i></div>
                        <div class="number info">EOF
        echo "$TOTAL_TESTS" >> public/index.html
        cat >> public/index.html << 'EOF'
        </div>
                        <div class="label">Total Tests</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="icon purple"><i class="fas fa-percentage"></i></div>
                        <div class="number purple">EOF
        echo "${SUCCESS_RATE}%" >> public/index.html
        cat >> public/index.html << 'EOF'
        </div>
                        <div class="label">Success Rate</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="icon warning"><i class="fas fa-clock"></i></div>
                        <div class="number warning">EOF
        echo "$TEST_DURATION" >> public/index.html
        cat >> public/index.html << 'EOF'
        </div>
                        <div class="label">Duration</div>
                    </div>
                </div>
                
                <div class="reports-grid">
                    <div class="report-card">
                        <h3><i class="fas fa-chart-bar"></i> Test Report</h3>
                        <p>Comprehensive test results with detailed breakdown of all test suites, including controllers, services, integration and system tests.</p>
                        <a href="test-report.html" class="btn" target="_blank">
                            <i class="fas fa-external-link-alt"></i> View Report
                        </a>
                        <a href="test-report.json" class="btn btn-secondary" target="_blank">
                            <i class="fas fa-download"></i> JSON Data
                        </a>
                    </div>
                    
                    <div class="report-card">
                        <h3><i class="fas fa-shield-alt"></i> API Documentation</h3>
                        <p>Interactive Swagger documentation for all API endpoints, including authentication, users, transactions and system routes.</p>
                        <a href="https://henriquecervi.github.io/pgats-automacao-api-mocks/api-docs" class="btn" target="_blank">
                            <i class="fas fa-book"></i> Swagger UI
                        </a>
                    </div>
                    
                    <div class="report-card">
                        <h3><i class="fas fa-code-branch"></i> Source Code</h3>
                        <p>Access the complete source code, documentation and contribute to the project on GitHub.</p>
                        <a href="https://github.com/henriquecervi/pgats-automacao-api-mocks" class="btn" target="_blank">
                            <i class="fab fa-github"></i> GitHub Repo
                        </a>
                    </div>
                    
                    <div class="report-card">
                        <h3><i class="fas fa-download"></i> Local Testing</h3>
                        <p>Instructions to run tests locally and generate reports on your development environment.</p>
                        <a href="https://github.com/henriquecervi/pgats-automacao-api-mocks#testing" class="btn" target="_blank">
                            <i class="fas fa-terminal"></i> Setup Guide
                        </a>
                    </div>
                </div>
                
                <footer class="footer">
                    <p>üöÄ Automated CI/CD Pipeline with GitHub Actions</p>
                    <p>üìä Reports updated automatically on every push to main branch</p>
                    <p style="margin-top: 10px; opacity: 0.7;">Made with ‚ù§Ô∏è for API Testing & Automation Learning</p>
                </footer>
            </div>
            
            <script>
                // Set current date
                document.getElementById('buildDate').textContent = new Date().toLocaleString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit',
                    timeZoneName: 'short'
                });
                
                // Add some interactive animations
                document.querySelectorAll('.stat-card').forEach(card => {
                    card.addEventListener('mouseenter', () => {
                        card.style.transform = 'translateY(-10px) scale(1.02)';
                    });
                    
                    card.addEventListener('mouseleave', () => {
                        card.style.transform = 'translateY(0) scale(1)';
                    });
                });
            </script>
        </body>
        </html>
        EOF
        
    - name: üìÅ Setup Pages
      uses: actions/configure-pages@v4
      
    - name: üöÄ Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public
        
    - name: üåê Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4